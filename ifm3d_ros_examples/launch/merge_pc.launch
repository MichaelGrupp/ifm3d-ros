<?xml version="1.0"?>
<launch>
  <!-- Command-line arguments -->
  <arg name="ns" default="ifm3d_ros_examples"/>
  <arg name="nn1" default="camera1"/>
  <arg name="nn2" default="camera2"/>
  <arg name="nn3" default="camera3"/>
  <arg name="nn4" default="camera4"/>
  <arg name="nn5" default="camera5"/>
  <arg name="nn6" default="camera6"/>
  <arg name="ip" default="192.168.0.69"/>
  <arg name="xmlrpc_port" default="80"/>
  <arg name="pcic_port_1" default="50010"/>
  <arg name="pcic_port_2" default="50011"/>
  <arg name="pcic_port_3" default="50012"/>
  <arg name="pcic_port_4" default="50013"/>
  <arg name="pcic_port_5" default="50014"/>
  <arg name="pcic_port_6" default="50015"/>
  <arg name="password" default=""/>
  <arg name="schema_mask" default="15"/>
  <arg name="timeout_millis" default="500"/>
  <arg name="timeout_tolerance_secs" default="5.0"/>
  <arg name="frame_id_base" default="$(arg ns)/$(arg nn1)" />
  <arg name="respawn" default="false"/>
  <arg name="assume_sw_triggered" default="false"/>

  <!-- node 1 -->
  <include ns="$(arg ns)" file="$(find ifm3d_ros_examples)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nn1)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_1)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="schema_mask" value="$(arg schema_mask)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg ns)/$(arg nn1)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
  </include>

  <!-- node 2 -->
  <include ns="$(arg ns)" file="$(find ifm3d_ros_examples)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nn2)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_2)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="schema_mask" value="$(arg schema_mask)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg ns)/$(arg nn2)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
  </include>

  <!-- node 3 -->
  <include ns="$(arg ns)" file="$(find ifm3d_ros_examples)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nn3)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_3)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="schema_mask" value="$(arg schema_mask)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg ns)/$(arg nn3)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
  </include>

  <!-- node 4 -->
  <include ns="$(arg ns)" file="$(find ifm3d_ros_examples)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nn4)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_4)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="schema_mask" value="$(arg schema_mask)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg ns)/$(arg nn4)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
  </include>

  <!-- node 5 2D RGB -->
  <include ns="$(arg ns)" file="$(find ifm3d_ros_examples)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nn5)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_5)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="schema_mask" value="$(arg schema_mask)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg ns)/$(arg nn5)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
  </include>

  <!-- node 6 2D RGB -->
  <include ns="$(arg ns)" file="$(find ifm3d_ros_examples)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nn6)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_6)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="schema_mask" value="$(arg schema_mask)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg ns)/$(arg nn6)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
  </include>

    <!-- rosservice call to set all camera to RUN mode -->
  <node pkg="rosservice" type="rosservice" name="start_camera1" args="call --wait /ifm3d_ros_examples/camera1/SoftOn" />
  <node pkg="rosservice" type="rosservice" name="start_camera2" args="call --wait /ifm3d_ros_examples/camera2/SoftOn" />
  <node pkg="rosservice" type="rosservice" name="start_camera3" args="call --wait /ifm3d_ros_examples/camera3/SoftOn" />
  <node pkg="rosservice" type="rosservice" name="start_camera4" args="call --wait /ifm3d_ros_examples/camera4/SoftOn" />


   <!-- coord frame transform from ROS sensor frame to static map frame (no egomotion) -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="$(arg nn1)_tf"
        args="0 0 0 0 0 0 map $(arg ns)/$(arg nn1)_link"
        respawn="$(arg respawn)" />

  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="$(arg nn2)_tf"
        args="0 0 0 0 0 0 map $(arg ns)/$(arg nn2)_link"
        respawn="$(arg respawn)" />

  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="$(arg nn3)_tf"
        args="0 0 0 0 0 0 map $(arg ns)/$(arg nn3)_link"
        respawn="$(arg respawn)" />

  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="$(arg nn4)_tf"
        args="0 0 0 0 0 0 map $(arg ns)/$(arg nn4)_link"
        respawn="$(arg respawn)" />

</launch>
