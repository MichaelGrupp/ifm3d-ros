<?xml version="1.0"?>
<launch>
  <!-- This lauch file is an example for how to use four camera heads at the same time: their data will be transformed into a collective reference frame without any relative calibration in 3D. -->

  <!-- Command-line arguments -->
  <arg name="namespace" default="camera_driver" doc="Desired namespace for the camera nodelet" />
  <arg name="nodelet_name1" default="camera_front_rgb"/>
  <arg name="nodelet_name2" default="camera_rear_rgb"/>
  <arg name="nodelet_name3" default="camera_front_cloud"/>
  <arg name="nodelet_name4" default="camera_rear_cloud"/>
  <arg name="ip" default="127.0.0.1" doc="The IP address of the VPU, i.e. main processing unit." />
  <arg name="xmlrpc_port" default="80" doc="The TCP port the camera's xmlrpc server is listening on for requests."/>
  <arg name="pcic_port_1" default="50010" doc="The TCP (data) port the first camera's pcic server is listening on for requests."/>
  <arg name="pcic_port_2" default="50011" doc="The TCP (data) port the second camera's pcic server is listening on for requests."/>
  <arg name="pcic_port_3" default="50012" doc="The TCP (data) port the third camera's pcic server is listening on for requests."/>
  <arg name="pcic_port_4" default="50013" doc="The TCP (data) port the fourth camera's pcic server is listening on for requests."/>
  <arg name="password" default="" doc="The password required to establish an edit session on the VPU."/>
  <arg name="timeout_millis" default="500" doc="The number of milliseconds to wait for the framegrabber to return new frame data before declaring a &quot;timeout&quot; and to stop blocking on new data."/>
  <arg name="timeout_tolerance_secs" default="5.0" doc="The wall time to wait with no new data from the camera before trying to establish a new connection to the camera."/>
  <arg name="frame_id_base" default="$(arg namespace)/$(arg nodelet_name1)" doc="This string provides a prefix into the `tf` tree for `ifm3d-ros` coordinate frames."/>
  <arg name="respawn" default="false" doc="Restart the node automatically if it quits."/>
  <arg name="assume_sw_triggered" default="false" doc="This provides a hint to the driver that the camera is configured for software triggering (as opposed to free running and hardware triggered modes - will follow soon)."/>
  <!-- VPU 3D args -->
  <arg name="imager_type_3d" default="3D" doc="The imager type of the requested camera head"/>
  <arg name="xyz_image_stream_3d" default="true" doc="Enable xyz image streaming for 3D camera camera streams." />
  <arg name="confidence_image_stream_3d" default="true" doc="Enable confidence image streaming for 3D camera camera streams." />
  <arg name="radial_distance_image_stream_3d" default="true" doc="Enable radial distance image streaming for 3D camera camera streams." />
  <arg name="radial_distance_noise_stream_3d" default="true" doc="Enable distance noise image streaming for 3D camera camera streams." />
  <arg name="amplitude_image_stream_3d" default="true" doc="Enable amplitude image streaming for 3D camera camera streams." />
  <arg name="extrinsic_image_stream_3d" default="true" doc="Enable extrinsic values streaming for 3D camera camera streams." />
  <arg name="intrinsic_image_stream_3d" default="false" doc="Enable intrinsic values streaming for 3D camera camera streams." />
  <arg name="rgb_image_stream_3d" default="false" doc="Enable rgb image streaming for 3D camera camera streams." />
  <!-- VPU 2D args -->
  <arg name="imager_type_2d" default="2D" doc="The imager type of the requested camera head"/>
  <arg name="xyz_image_stream_2d" default="false" doc="Enable xyz image streaming for 3D camera camera streams." />
  <arg name="confidence_image_stream_2d" default="false" doc="Enable confidence image streaming for 3D camera camera streams." />
  <arg name="radial_distance_image_stream_2d" default="false" doc="Enable radial distance image streaming for 3D camera camera streams." />
  <arg name="radial_distance_noise_stream_2d" default="false" doc="Enable distance noise image streaming for 3D camera camera streams." />
  <arg name="amplitude_image_stream_2d" default="false" doc="Enable amplitude image streaming for 3D camera camera streams." />
  <arg name="extrinsic_image_stream_2d" default="false" doc="Enable extrinsic values streaming for 3D camera camera streams." />
  <arg name="intrinsic_image_stream_2d" default="false" doc="Enable intrinsic values streaming for 3D camera camera streams." />
  <arg name="rgb_image_stream_2d" default="true" doc="Enable rgb image streaming for 3D camera camera streams." />

  <!-- node 1 -->
  <include ns="$(arg namespace)" file="$(find ifm3d_ros_driver)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nodelet_name1)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_1)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="imager_type" value="$(arg imager_type_2d)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg namespace)/$(arg nodelet_name1)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
    <!-- configure VPU (IPC) available data streams -->
    <arg name="xyz_image_stream" value="$(arg xyz_image_stream_2d)"/>
    <arg name="confidence_image_stream" value="$(arg confidence_image_stream_2d)"/>"
    <arg name="radial_distance_image_stream" value="$(arg radial_distance_image_stream_2d)"/>"
    <arg name="radial_distance_noise_stream" value="$(arg radial_distance_noise_stream_2d)"/>"
    <arg name="amplitude_image_stream" value="$(arg amplitude_image_stream_2d)"/>"
    <arg name="extrinsic_image_stream" value="$(arg extrinsic_image_stream_2d)"/>"
    <arg name="intrinsic_image_stream" value="$(arg intrinsic_image_stream_2d)"/>"
    <arg name="rgb_image_stream" value="$(arg rgb_image_stream_2d)"/>"
  </include>

  <!-- node 2 -->
  <include ns="$(arg namespace)" file="$(find ifm3d_ros_driver)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nodelet_name2)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_2)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="imager_type" value="$(arg imager_type_2d)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg namespace)/$(arg nodelet_name2)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
    <!-- configure VPU (IPC) available data streams -->
    <arg name="xyz_image_stream" value="$(arg xyz_image_stream_2d)"/>
    <arg name="confidence_image_stream" value="$(arg confidence_image_stream_2d)"/>"
    <arg name="radial_distance_image_stream" value="$(arg radial_distance_image_stream_2d)"/>"
    <arg name="radial_distance_noise_stream" value="$(arg radial_distance_noise_stream_2d)"/>"
    <arg name="amplitude_image_stream" value="$(arg amplitude_image_stream_2d)"/>"
    <arg name="extrinsic_image_stream" value="$(arg extrinsic_image_stream_2d)"/>"
    <arg name="intrinsic_image_stream" value="$(arg intrinsic_image_stream_2d)"/>"
    <arg name="rgb_image_stream" value="$(arg rgb_image_stream_2d)"/>"
  </include>

  <!-- 3D - node 3 -->
  <include ns="$(arg namespace)" file="$(find ifm3d_ros_driver)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nodelet_name3)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_3)"/>
    <arg name="imager_type" value="$(arg imager_type_3d)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg namespace)/$(arg nodelet_name3)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
    <!-- configure VPU (IPC) available data streams -->
    <arg name="xyz_image_stream" value="$(arg xyz_image_stream_3d)"/>
    <arg name="confidence_image_stream" value="$(arg confidence_image_stream_3d)"/>"
    <arg name="radial_distance_image_stream" value="$(arg radial_distance_image_stream_3d)"/>"
    <arg name="radial_distance_noise_stream" value="$(arg radial_distance_noise_stream_3d)"/>"
    <arg name="amplitude_image_stream" value="$(arg amplitude_image_stream_3d)"/>"
    <arg name="extrinsic_image_stream" value="$(arg extrinsic_image_stream_3d)"/>"
    <arg name="intrinsic_image_stream" value="$(arg intrinsic_image_stream_3d)"/>"
    <arg name="rgb_image_stream" value="$(arg rgb_image_stream_3d)"/>"
  </include>

  <!-- 3D - node 4 -->
  <include ns="$(arg namespace)" file="$(find ifm3d_ros_driver)/launch/nodelet.launch">
    <arg name="camera" value="$(arg nodelet_name4)"/>
    <arg name="ip" value="$(arg ip)"/>
    <arg name="xmlrpc_port" value="$(arg xmlrpc_port)"/>
    <arg name="pcic_port" value="$(arg pcic_port_4)"/>
    <arg name="imager_type" value="$(arg imager_type_3d)"/>
    <arg name="password" value="$(arg password)"/>
    <arg name="timeout_millis" value="$(arg timeout_millis)"/>
    <arg name="timeout_tolerance_secs" value="$(arg timeout_tolerance_secs)"/>
    <arg name="frame_id_base" value="$(arg namespace)/$(arg nodelet_name4)" />
    <arg name="respawn" value="$(arg respawn)"/>
    <arg name="assume_sw_triggered" value="$(arg assume_sw_triggered)"/>
    <!-- configure VPU (IPC) available data streams -->
    <arg name="xyz_image_stream" value="$(arg xyz_image_stream_3d)"/>
    <arg name="confidence_image_stream" value="$(arg confidence_image_stream_3d)"/>"
    <arg name="radial_distance_image_stream" value="$(arg radial_distance_image_stream_3d)"/>"
    <arg name="radial_distance_noise_stream" value="$(arg radial_distance_noise_stream_3d)"/>"
    <arg name="amplitude_image_stream" value="$(arg amplitude_image_stream_3d)"/>"
    <arg name="extrinsic_image_stream" value="$(arg extrinsic_image_stream_3d)"/>"
    <arg name="intrinsic_image_stream" value="$(arg intrinsic_image_stream_3d)"/>"
    <arg name="rgb_image_stream" value="$(arg rgb_image_stream_3d)"/>"
  </include>

</launch>
