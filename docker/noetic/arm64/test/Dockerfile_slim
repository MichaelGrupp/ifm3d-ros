FROM arm64v8/ros:noetic-ros-core AS build

ARG DEBIAN_FRONTEND=noninteractive
WORKDIR /home/ifm
RUN apt-get update && apt-get -y upgrade
RUN apt-get update && \
    apt-get install -y --no-install-recommends libboost-all-dev \
                       git \
                       libcurl4-openssl-dev \
                       libgtest-dev \
                       libgoogle-glog-dev \
                       libxmlrpc-c++8-dev \
                       libopencv-dev \
                       libpcl-dev \
                       libproj-dev \
                       python3-dev \
                       python3-pip \
                       build-essential \
                       coreutils \
                       findutils \
                       cmake \
                       locales
RUN apt-get clean

# First clone ifm3d repo via username and personal access token into the container and then build the ifm3d
ARG IFM3D_CLONE_REPO

RUN mkdir src && \
    cd src && \
    git clone --branch o3r/main-next ${IFM3D_CLONE_REPO} && \
    cd ifm3d && \
    echo "Building from current branch" && \
    mkdir build && \
    cd build && \
    cmake -GNinja cmake -DCMAKE_INSTALL_PREFIX=/install -DBUILD_MODULE_IMAGE=ON -DBUILD_IN_DEPS=OFF .. && \
    cmake --build . && \
    cmake --build . --target install

RUN cp -r /install/* /usr/

# install additional ros packages which are not part of the ros-core image
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-noetic-robot=1.5.0-1* \
    ros-noetic-perception=1.5.0-1* \
    && rm -rf /var/lib/apt/lists/*

# use the first build stage to also compile the ros package as it has shared dependencies as ifm3d 
RUN mkdir -p catkin_ws/ifm3d-ros/src

# Initialize catkin workspace
RUN /bin/bash -c 'cd catkin_ws/ifm3d-ros/src; . /opt/ros/noetic/setup.bash; catkin_init_workspace'

# Clone and build ifm3d-ros repo
ARG IFM3D_ROS_CLONE_REPO
RUN cd /home/ifm/catkin_ws/ifm3d-ros/src && \
    git clone --branch o3r/vision-fair ${IFM3D_ROS_CLONE_REPO}

RUN /bin/bash -c 'cd catkin_ws/ifm3d-ros; . /opt/ros/noetic/setup.bash; catkin_make'

RUN mkdir -p /ros_install/
RUN /bin/bash -c 'cd /home/ifm/catkin_ws/ifm3d-ros/; . /opt/ros/noetic/setup.bash; catkin_make install -DCMAKE_INSTALL_PREFIX=/ros_install'



FROM arm64v8/ros:noetic-ros-core

ARG DEBIAN_FRONTEND=noninteractive
COPY --from=build /install/ /usr/   
COPY --from=build /ros_install /ros_install/
COPY --from=build /home/ifm/catkin_ws/ /home/ifm/catkin_ws/

WORKDIR /home/ifm

# # add ROS package index to sources.list
# RUN apt-get update && apt-get install curl 
# RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
    
RUN apt-get update && apt-get install -y --no-install-recommends \
        libgoogle-glog0v5 \
        libopencv-core* \
        libxmlrpc-c++8v5 \
        locales \
        sudo \
        && apt-get clean

# install additional run dependencies of ifm3d-ros
# the installation of additional ROS runtime dependecies as below works, but will result in a Docker image ~ 1.8 GB
RUN apt-get update && apt-get install -y --no-install-recommends ros-noetic-nodelet \
        ros-noetic-tf2-ros \
        ros-noetic-robot=1.5.0-1* \
        ros-noetic-image-transport \
        ros-noetic-cv-bridge \
        && rm -rf /var/lib/apt/lists/* \
        && apt-get clean && rm -rf /var/lib/apt/lists/*s \
        && apt-get autoremove -y \
        && dpkg -r --force-depends perl-modules-5.30 gfortran-8 perl-modules-5.30 humanity-icon-theme \
        && dpkg -r --force-depends libicu-dev \
        && dpkg -r --force-depends libpython3.8-dev cmake-data libapr1-dev libgcc-7-dev \
                libmysqlclient-dev libstdc++-7-dev libc6-dev cmake perl-modules-5.30 libpython3.8-dev libperl5.30 \
        && dpkg -r --force-depends libgl1-mesa-dri

        # ros-noetic-pcl-ros

# # add default user
# ARG ROSUSER_PASSWORD="rosuser"
# RUN useradd -r -s /bin/bash --create-home -g root -G sudo -u 1001 rosuser 
# RUN echo "rosuser:${ROSUSER_PASSWORD}" | chpasswd
# USER rosuser

